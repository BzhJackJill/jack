#!/bin/bash
#
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# Default setting
#

if [ -z "$TMPDIR" ]; then
  TMPDIR="/tmp"
fi

if [ -z "$SERVER_PORT" ]; then
  SERVER_PORT=8072
fi

if [ -z "$SERVER_COUNT" ]; then
  SERVER_COUNT=1
fi

if [ -z "$SERVER_NB_COMPILE" ]; then
  SERVER_NB_COMPILE=4
fi

if [ -z "$SERVER_TIMEOUT" ]; then
  SERVER_TIMEOUT=60
fi

#
# Static setting
#

#
# Prepare compilation
#

SERVER_PRG="$JACK_VM_COMMAND -cp $JACK_JAR com.android.jack.server.JackSimpleServer"
SERVER_DIR="$TMPDIR/jack-$USER"
JACK_DIR="$SERVER_DIR/jack-task-$$/"
SERVER_LOG="$SERVER_DIR/jack-$SERVER_PORT.log"
JACK_OUT="$JACK_DIR/out"
JACK_ERR="$JACK_DIR/err"
JACK_CLI="$JACK_DIR/cli"
JACK_PWD="$PWD"

mkdir  -m 700 "$SERVER_DIR"  2>/dev/null

# Cleanup
trap 'rm -f $JACK_OUT $JACK_ERR $JACK_CLI 2>/dev/null; rmdir $JACK_DIR 2>/dev/null' EXIT
set -o nounset
set -o errexit

# Create fifo for a task
mkdir  -m 700 "$JACK_DIR"
mkfifo -m 600 "$JACK_OUT"
mkfifo -m 600 "$JACK_ERR"

# Try to cleanup if interrupted
trap 'kill -9 $PID_OUT $PID_ERR; exit 255' SIGHUP SIGINT SIGQUIT SIGTERM ERR
# Redirect output and error
cat <"$JACK_OUT" >&1 &
PID_OUT=$!
cat <"$JACK_ERR" >&2 &
PID_ERR=$!

# Prepare the working directory and command line
echo -n \"$PWD\" "" >"$JACK_CLI"
for i in "$@"; do
  echo -n \"$i\" "" >>"$JACK_CLI"
done
echo >>"$JACK_CLI"

set +o errexit
trap ERR

#
# Launch the compilation
#

# Launch compilation
EXIT_CODE=255
RETRY=3
while true; do
  EXIT_CODE=$(curl -f -s -d@- http://127.0.0.1:$SERVER_PORT/jack <<< "+ $JACK_OUT $JACK_ERR $JACK_CLI")
  CODE=$?
  if [ -z "$EXIT_CODE" ]; then
    kill -9 $PID_OUT $PID_ERR
    exit 255
  fi 
  if [ $CODE -eq 0 ]; then
    break;
  elif [ $CODE -eq 7 ]; then
    if [ $RETRY -eq 0 ]; then
      kill -9 $PID_OUT $PID_ERR
      echo "Cannot lunch background server"
      exit 255
    else
      # Launch the server
      echo "Launching background server" $SERVER_PRG
      $SERVER_PRG $SERVER_PORT $SERVER_COUNT $SERVER_NB_COMPILE $SERVER_TIMEOUT >$SERVER_LOG 2>&1 &
      let RETRY=RETRY-1
      sleep 3
    fi
  fi
done

# Wait for termination
wait $PID_OUT
wait $PID_ERR

# Exit
exit $EXIT_CODE
