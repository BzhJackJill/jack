com.android.jack.shrob.test001.jack.E -> com.android.jack.shrob.test001.jack.RenamedE:
    void <init>() -> <init>
    void keep() -> renamedKeep
com.android.jack.shrob.test001.jack.I -> com.android.jack.shrob.test001.jack.RenamedI:
    void m() -> renamedM
com.android.jack.shrob.test001.jack.H -> com.android.jack.shrob.test001.jack.RenamedH:
com.android.jack.shrob.test001.jack.J -> com.android.jack.shrob.test001.jack.RenamedJ:
    void <init>() -> <init>
    int[][][] m() -> renamedM
    int m0() -> renamedM0
    int[] m1() -> renamedM1
    int[][] m2() -> renamedM2
    int[][][] m3() -> renamedM3
    int[][][] m5(int,boolean,long) -> renamedM5
com.android.jack.shrob.test001.jack.F -> com.android.jack.shrob.test001.jack.RenamedF:
    void <init>() -> <init>
    void keep() -> renamedKeep
com.android.jack.shrob.test001.jack.B -> com.android.jack.shrob.test001.jack.RenamedB:
    void <init>() -> <init>
com.android.jack.shrob.test001.jack.D -> com.android.jack.shrob.test001.jack.RenamedD:
    void <init>() -> <init>
    void keep() -> renamedKeep
    void main(java.lang.String[]) -> renamedMain
    void main2(java.lang.String[]) -> renamedMain2
com.android.jack.shrob.test001.jack.G -> com.android.jack.shrob.test001.jack.RenamedG:
    void <init>() -> <init>
    void m() -> renamedM
    void main(java.lang.String[]) -> renamedMain
com.android.jack.shrob.test001.jack.Reflect -> com.android.jack.shrob.test001.jack.RenamedReflect:
    void <init>() -> <init>
    void keep() -> renamedKeep
    void keep2() -> renamedKeep2
    void keep3() -> renamedKeep3
    void keep4() -> renamedKeep4
    void keep5() -> renamedKeep5
    void keep6() -> renamedKeep6
    void keep7() -> renamedKeep7
    void keep8() -> renamedKeep8
com.android.jack.shrob.test001.jack.C -> com.android.jack.shrob.test001.jack.RenamedC:
    void <init>() -> <init>
    void f() -> renamedF
    void m() -> renamedM
com.android.jack.shrob.test001.jack.A -> com.android.jack.shrob.test001.jack.RenamedA:
    void <init>() -> <init>
    void <init>(int) -> <init>
    void m() -> renamedM
    void privateFunc() -> renamedPrivateFunc
    void <clinit>() -> <clinit>
com.android.jack.shrob.test001.jack.Reflect2 -> com.android.jack.shrob.test001.jack.Reflect2:
    com.android.jack.shrob.test001.jack.Reflect2$A a -> a
    com.android.jack.shrob.test001.jack.Reflect2$B b -> b
    java.lang.Object c -> c
    long fieldLong -> fieldLong
    long fieldLong2 -> fieldLong2
    long fieldLong3 -> fieldLong3
    long fieldLong4 -> fieldLong4
    int fieldPrivate -> fieldPrivate
    int fieldPublic -> fieldPublic
    void <init>() -> <init>
    void calledMethod() -> renamedCalledMethod
    void m(com.android.jack.shrob.test001.jack.Reflect2$A) -> renamedM
    void privateMethod(com.android.jack.shrob.test001.jack.Reflect2$B) -> renamedPrivateMethod
com.android.jack.shrob.test001.jack.Reflect2$A -> com.android.jack.shrob.test001.jack.Reflect2$A:
    com.android.jack.shrob.test001.jack.Reflect2 this$0 -> this$0
    void <init>(com.android.jack.shrob.test001.jack.Reflect2) -> <init>
com.android.jack.shrob.test001.jack.Reflect2$B -> com.android.jack.shrob.test001.jack.Reflect2$B:
    com.android.jack.shrob.test001.jack.Reflect2 this$0 -> this$0
    void <init>(com.android.jack.shrob.test001.jack.Reflect2) -> <init>
com.android.jack.shrob.test001.jack.L -> com.android.jack.shrob.test001.jack.L:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    void onReceive() -> renamedOnReceive
com.android.jack.shrob.test001.jack.K -> com.android.jack.shrob.test001.jack.K:
    java.lang.String TAG -> TAG
    java.lang.String TAG2 -> TAG2
    int h -> h
    int i -> i
    int i2 -> i2
    int i3 -> i3
    int j -> j
    java.lang.Object o -> o
    void <init>() -> <init>
    void keep() -> renamedKeep
    void <clinit>() -> <clinit>
