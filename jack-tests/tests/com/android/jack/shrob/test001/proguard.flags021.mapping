com.android.jack.shrob.test001.jack.E -> com.android.jack.shrob.test001.jack.RenamedE:
    void keep() -> renamedKeep
com.android.jack.shrob.test001.jack.I -> com.android.jack.shrob.test001.jack.RenamedI:
    void m() -> renamedM
com.android.jack.shrob.test001.jack.H -> com.android.jack.shrob.test001.jack.RenamedH:
com.android.jack.shrob.test001.jack.J -> com.android.jack.shrob.test001.jack.RenamedJ:
    int[][][] m() -> renamedM
    int m0() -> renamedM0
    int[] m1() -> renamedM1
    int[][] m2() -> renamedM2
    int[][][] m3() -> renamedM3
    int[][][] m5(int,boolean,long) -> renamedM5
com.android.jack.shrob.test001.jack.F -> com.android.jack.shrob.test001.jack.RenamedF:
    void keep() -> renamedKeep
com.android.jack.shrob.test001.jack.B -> com.android.jack.shrob.test001.jack.RenamedB:
com.android.jack.shrob.test001.jack.D -> com.android.jack.shrob.test001.jack.RenamedD:
    void keep() -> renamedKeep
    void main(java.lang.String[]) -> renamedMain
    void main2(java.lang.String[]) -> renamedMain2
com.android.jack.shrob.test001.jack.G -> com.android.jack.shrob.test001.jack.RenamedG:
    void m() -> renamedM
    void main(java.lang.String[]) -> renamedMain
com.android.jack.shrob.test001.jack.Reflect -> com.android.jack.shrob.test001.jack.RenamedReflect:
    void keep() -> renamedKeep
    void keep2() -> renamedKeep2
    void keep3() -> renamedKeep3
    void keep4() -> renamedKeep4
    void keep5() -> renamedKeep5
    void keep6() -> renamedKeep6
    void keep7() -> renamedKeep7
    void keep8() -> renamedKeep8
com.android.jack.shrob.test001.jack.C -> com.android.jack.shrob.test001.jack.RenamedC:
    void f() -> renamedF
    void m() -> renamedM
com.android.jack.shrob.test001.jack.A -> com.android.jack.shrob.test001.jack.RenamedA:
    void m() -> renamedM
    void privateFunc() -> renamedPrivateFunc
com.android.jack.shrob.test001.jack.K -> com.android.jack.shrob.test001.jack.K:
    void keep() -> renamedKeep
